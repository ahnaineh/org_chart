"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[884],{3462:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"getting-started/Basic Usage","title":"Basic Usage","description":"A quick guide to get started with the org_chart package.","source":"@site/docs/getting-started/Basic Usage.mdx","sourceDirName":"getting-started","slug":"/getting-started/Basic Usage","permalink":"/org_chart/docs/getting-started/Basic Usage","draft":false,"unlisted":false,"editUrl":"https://github.com/ahnaineh/orgchart/tree/docs/docs/docs/getting-started/Basic Usage.mdx","tags":[{"inline":true,"label":"flutter","permalink":"/org_chart/docs/tags/flutter"},{"inline":true,"label":"org_chart","permalink":"/org_chart/docs/tags/org-chart"},{"inline":true,"label":"getting started","permalink":"/org_chart/docs/tags/getting-started"}],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Basic Usage","description":"A quick guide to get started with the org_chart package.","tags":["flutter","org_chart","getting started"],"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/org_chart/docs/getting-started/Installation"},"next":{"title":"Common","permalink":"/org_chart/docs/category/common"}}');var a=r(4848),i=r(8453);const o={title:"Basic Usage",description:"A quick guide to get started with the org_chart package.",tags:["flutter","org_chart","getting started"],sidebar_position:2},s="Basic Usage",d={},l=[{value:"Import the Package",id:"import-the-package",level:2},{value:"Create a Basic Organizational Chart",id:"create-a-basic-organizational-chart",level:2},{value:"Step 1: Create a Controller",id:"step-1-create-a-controller",level:3},{value:"Step 2: Define Your Chart",id:"step-2-define-your-chart",level:3},{value:"Using Node Details",id:"using-node-details",level:2},{value:"Handling Node Events",id:"handling-node-events",level:2},{value:"Using With Data Objects",id:"using-with-data-objects",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"basic-usage",children:"Basic Usage"})}),"\n",(0,a.jsx)(t.p,{children:"This guide covers the fundamental steps to create an organizational chart using the org_chart package."}),"\n",(0,a.jsx)(t.h2,{id:"import-the-package",children:"Import the Package"}),"\n",(0,a.jsx)(t.p,{children:"First, import the package in your Dart file:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"import 'package:org_chart/org_chart.dart';\n"})}),"\n",(0,a.jsx)(t.h2,{id:"create-a-basic-organizational-chart",children:"Create a Basic Organizational Chart"}),"\n",(0,a.jsx)(t.h3,{id:"step-1-create-a-controller",children:"Step 1: Create a Controller"}),"\n",(0,a.jsxs)(t.p,{children:["Initialize an ",(0,a.jsx)(t.code,{children:"OrgChartController"})," to manage your chart:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:'List<Map<String, dynamic>> items = [\r\n  {"id": "1", "to": null}, // Root node\r\n  {"id": "2", "to": "1"}, // Child of node with id \'1\'\r\n  {"id": "3", "to": "1"}, // Another child of node with id \'1\'\r\n];\r\nfinal controller = OrgChartController<Map<String, dynamic>>(\r\n    items: items, // List of items to display in the chart\r\n    idProvider: (item) => item["id"], // Function to get the ID of an item\r\n    toProvider: (item) => item["to"], // Function to get the parent ID of an item\r\n);\n'})}),"\n",(0,a.jsx)(t.h3,{id:"step-2-define-your-chart",children:"Step 2: Define Your Chart"}),"\n",(0,a.jsxs)(t.p,{children:["Add the ",(0,a.jsx)(t.code,{children:"OrgChart"})," widget to your UI with nodes:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"OrgChart<Map<String, dynamic>>(\r\n  controller: controller,\r\n  builder: (details) {\r\n    return Container(\r\n      width: 150,\r\n      height: 80,\r\n      color: Colors.blue,\r\n      child: Center(\r\n        child: Text(\r\n          'Node ${details.item[\"id\"]}',\r\n          style: TextStyle(color: Colors.white),\r\n        ),\r\n      ),\r\n    );\r\n  },\r\n)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"using-node-details",children:"Using Node Details"}),"\n",(0,a.jsxs)(t.p,{children:["A ",(0,a.jsx)(t.code,{children:"details"})," parameter is provided within the builder function with useful information:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"builder: (context, details) {\r\n  return Container(\r\n    decoration: BoxDecoration(\r\n      border: Border.all(\r\n        color: details.beingDragged ? Colors.red : Colors.blue,\r\n        width: 2,\r\n      ),\r\n    ),\r\n    child: Text('Node ${details.data}'),\r\n  );\r\n}\n"})}),"\n",(0,a.jsx)(t.h2,{id:"handling-node-events",children:"Handling Node Events"}),"\n",(0,a.jsxs)(t.p,{children:["You can wrap your widget within the builder method with a ",(0,a.jsx)(t.code,{children:"GestureDetector"})," to handle events like taps and double taps:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"OrgChart<Map<String, dynamic>>(\r\n  ...\r\n  builder: (context, details) {\r\n    return GestureDetector(\r\n      onTap: () {\r\n        // Handle tap event\r\n      },\r\n      onDoubleTap: () {\r\n        // Handle double tap event\r\n      },\r\n      child: ...\r\n    );\r\n  },\r\n)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"using-with-data-objects",children:"Using With Data Objects"}),"\n",(0,a.jsx)(t.p,{children:"You can easily map your custom data to nodes:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"class Employee {\r\n  final String id;\r\n  final String name;\r\n  final String? managerId;\r\n  \r\n  Employee({required this.id, required this.name, this.managerId});\r\n}\r\n\r\n// Create employees\r\nfinal employees = [\r\n  Employee(id: '1', name: 'CEO', managerId: null),\r\n  Employee(id: '2', name: 'CTO', managerId: '1'),\r\n  Employee(id: '3', name: 'CFO', managerId: '1'),\r\n];\r\n\r\n// Create OrgChartController\r\nfinal controller = OrgChartController<Employee>(\r\n  items: employees,\r\n  idProvider: (employee) => employee.id,\r\n  toProvider: (employee) => employee.managerId,\r\n);\r\n\r\n// Use in chart\r\nOrgChart<Employee>(\r\n  controller: controller,\r\n  nodes: nodes,\r\n)\n"})}),"\n",(0,a.jsx)(t.p,{children:"For more advanced usage, including controlling node positions, changing orientation, and other features, check the Advanced Usage section."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>s});var n=r(6540);const a={},i=n.createContext(a);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);