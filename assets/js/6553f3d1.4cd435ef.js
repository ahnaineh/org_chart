"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6372],{1470:(e,n,r)=>{r.d(n,{A:()=>I});var t=r(6540),l=r(4164),o=r(3104),i=r(6347),d=r(205),a=r(7485),s=r(1682),c=r(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})))}(r);return function(e){const n=(0,s.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function x({value:e,tabValues:n}){return n.some((n=>n.value===e))}function p({queryString:e=!1,groupId:n}){const r=(0,i.W6)(),l=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,a.aZ)(l),(0,t.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function j(e){const{defaultValue:n,queryString:r=!1,groupId:l}=e,o=u(e),[i,a]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[s,h]=p({queryString:r,groupId:l}),[j,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,l]=(0,c.Dv)(n);return[r,(0,t.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:l}),g=(()=>{const e=s??j;return x({value:e,tabValues:o})?e:null})();(0,d.A)((()=>{g&&a(g)}),[g]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!x({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),m(e)}),[h,m,o]),tabValues:o}}var m=r(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(4848);function f({className:e,block:n,selectedValue:r,selectValue:t,tabValues:i}){const d=[],{blockElementScrollPositionUntilNextRender:a}=(0,o.a_)(),s=e=>{const n=e.currentTarget,l=d.indexOf(n),o=i[l].value;o!==r&&(a(n),t(o))},c=e=>{let n=null;switch(e.key){case"Enter":s(e);break;case"ArrowRight":{const r=d.indexOf(e.currentTarget)+1;n=d[r]??d[0];break}case"ArrowLeft":{const r=d.indexOf(e.currentTarget)-1;n=d[r]??d[d.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},e),children:i.map((({value:e,label:n,attributes:t})=>(0,v.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{d.push(e)},onKeyDown:c,onClick:s,...t,className:(0,l.A)("tabs__item",g.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function b({lazy:e,children:n,selectedValue:r}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=j(e);return(0,v.jsxs)("div",{className:(0,l.A)("tabs-container",g.tabList),children:[(0,v.jsx)(f,{...n,...e}),(0,v.jsx)(b,{...n,...e})]})}function I(e){const n=(0,m.A)();return(0,v.jsx)(y,{...e,children:h(e.children)},String(n))}},2699:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"3.0.0-orgchart/02-controller","title":"OrgChartController","description":"The OrgChartController is the brain of your organizational chart. It manages the data, handles updates, and provides methods for interacting with the chart programmatically.","source":"@site/docs/3.0.0-orgchart/02-controller.mdx","sourceDirName":"3.0.0-orgchart","slug":"/3.0.0-orgchart/02-controller","permalink":"/org_chart/docs/3.0.0-orgchart/02-controller","draft":false,"unlisted":false,"editUrl":"https://github.com/ahnaineh/org_chart/tree/main/doc/docs/3.0.0-orgchart/02-controller.mdx","tags":[],"version":"current","lastUpdatedBy":"Ali Hnaineh","lastUpdatedAt":1756574903000,"sidebarPosition":2,"frontMatter":{"id":"02-controller","title":"OrgChartController","sidebar_label":"Controller","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/org_chart/docs/3.0.0-orgchart/01-overview"},"next":{"title":"OrgChart Widget","permalink":"/org_chart/docs/3.0.0-orgchart/03-widget"}}');var l=r(4848),o=r(8453);r(1470),r(9365);const i={id:"02-controller",title:"OrgChartController",sidebar_label:"Controller",sidebar_position:2},d="OrgChartController",a={},s=[{value:"\ud83d\udccb Constructor",id:"-constructor",level:2},{value:"Constructor Parameters",id:"constructor-parameters",level:3},{value:"\ud83d\udd27 Properties",id:"-properties",level:2},{value:"Read-Only Properties",id:"read-only-properties",level:3},{value:"Configurable Properties",id:"configurable-properties",level:3},{value:"\ud83d\udcda Methods",id:"-methods",level:2},{value:"Data Management",id:"data-management",level:3},{value:"<code>addItem</code>",id:"additem",level:4},{value:"<code>addItems</code>",id:"additems",level:4},{value:"<code>removeItem</code>",id:"removeitem",level:4},{value:"<code>updateItem</code>",id:"updateitem",level:4},{value:"<code>replaceAll</code>",id:"replaceall",level:4},{value:"<code>clearItems</code>",id:"clearitems",level:4},{value:"Layout and Positioning",id:"layout-and-positioning",level:3},{value:"<code>calculatePosition</code>",id:"calculateposition",level:4},{value:"<code>switchOrientation</code>",id:"switchorientation",level:4},{value:"<code>centerNode</code>",id:"centernode",level:4},{value:"Node Queries",id:"node-queries",level:3},{value:"<code>getSubNodes</code>",id:"getsubnodes",level:4},{value:"<code>getLevel</code>",id:"getlevel",level:4},{value:"<code>isNodeHidden</code>",id:"isnodehidden",level:4},{value:"<code>isSubNode</code>",id:"issubnode",level:4},{value:"<code>getOverlapping</code>",id:"getoverlapping",level:4},{value:"Export Functions",id:"export-functions",level:3},{value:"<code>exportAsImage</code>",id:"exportasimage",level:4},{value:"<code>exportAsPdf</code>",id:"exportaspdf",level:4},{value:"\ud83c\udfaf Complete Example",id:"-complete-example",level:2},{value:"\ud83d\udca1 Best Practices",id:"-best-practices",level:2},{value:"1. <strong>Efficient Updates</strong>",id:"1-efficient-updates",level:3},{value:"3. <strong>Performance Optimization</strong>",id:"3-performance-optimization",level:3},{value:"Dynamic Data Loading",id:"dynamic-data-loading",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"orgchartcontroller",children:"OrgChartController"})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"OrgChartController"})," is the brain of your organizational chart. It manages the data, handles updates, and provides methods for interacting with the chart programmatically."]}),"\n",(0,l.jsx)(n.h2,{id:"-constructor",children:"\ud83d\udccb Constructor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"OrgChartController<T>({\n  required List<T> items,\n  required String Function(T) idProvider,\n  required String? Function(T) toProvider,\n  T Function(T, String?)? toSetter,\n  Size boxSize = const Size(200, 100),\n  double spacing = 20,\n  double runSpacing = 50,\n  GraphOrientation orientation = GraphOrientation.topToBottom,\n  int leafColumns = 2,\n})\n"})}),"\n",(0,l.jsx)(n.h3,{id:"constructor-parameters",children:"Constructor Parameters"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Required"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"items"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"List<T>"})}),(0,l.jsx)(n.td,{children:"\u2705"}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"The list of data items to display in the chart"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"idProvider"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"String Function(T)"})}),(0,l.jsx)(n.td,{children:"\u2705"}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"Function that returns a unique ID for each item"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"toProvider"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"String? Function(T)"})}),(0,l.jsx)(n.td,{children:"\u2705"}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"Function that returns the parent ID for each item"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"toSetter"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"T Function(T, String?)"})}),(0,l.jsx)(n.td,{children:"\u274c"}),(0,l.jsx)(n.td,{children:"null"}),(0,l.jsx)(n.td,{children:"Function to create a copy of item with new parent ID"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boxSize"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"Size"})}),(0,l.jsx)(n.td,{children:"\u274c"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"Size(200, 100)"})}),(0,l.jsx)(n.td,{children:"Size of each node box"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"spacing"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"double"})}),(0,l.jsx)(n.td,{children:"\u274c"}),(0,l.jsx)(n.td,{children:"20"}),(0,l.jsx)(n.td,{children:"Horizontal spacing between nodes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"runSpacing"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"double"})}),(0,l.jsx)(n.td,{children:"\u274c"}),(0,l.jsx)(n.td,{children:"50"}),(0,l.jsx)(n.td,{children:"Vertical spacing between levels"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"orientation"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"GraphOrientation"})}),(0,l.jsx)(n.td,{children:"\u274c"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"topToBottom"})}),(0,l.jsx)(n.td,{children:"Layout orientation"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"leafColumns"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"int"})}),(0,l.jsx)(n.td,{children:"\u274c"}),(0,l.jsx)(n.td,{children:"2"}),(0,l.jsx)(n.td,{children:"Number of columns for leaf node arrangement"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"-properties",children:"\ud83d\udd27 Properties"}),"\n",(0,l.jsx)(n.h3,{id:"read-only-properties",children:"Read-Only Properties"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Property"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"nodes"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"List<Node<T>>"})}),(0,l.jsx)(n.td,{children:"All nodes in the chart"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"roots"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"List<Node<T>>"})}),(0,l.jsx)(n.td,{children:"Root nodes (nodes without parents)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"items"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"List<T>"})}),(0,l.jsx)(n.td,{children:"All data items"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"uniqueNodeId"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"String"})}),(0,l.jsx)(n.td,{children:"Generates a unique node ID"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"repaintBoundaryKey"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"GlobalKey"})}),(0,l.jsx)(n.td,{children:"Key for export functionality"})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"configurable-properties",children:"Configurable Properties"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Property"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"orientation"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"GraphOrientation"})}),(0,l.jsx)(n.td,{children:"Chart orientation (vertical/horizontal)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boxSize"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"Size"})}),(0,l.jsx)(n.td,{children:"Size of node boxes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"spacing"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"double"})}),(0,l.jsx)(n.td,{children:"Horizontal spacing between nodes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"runSpacing"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"double"})}),(0,l.jsx)(n.td,{children:"Vertical spacing between levels"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"leafColumns"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"int"})}),(0,l.jsx)(n.td,{children:"Column arrangement for leaf nodes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"viewerController"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"CustomInteractiveViewerController?"})}),(0,l.jsx)(n.td,{children:"Controller for zoom/pan"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"-methods",children:"\ud83d\udcda Methods"}),"\n",(0,l.jsx)(n.h3,{id:"data-management",children:"Data Management"}),"\n",(0,l.jsx)(n.h4,{id:"additem",children:(0,l.jsx)(n.code,{children:"addItem"})}),"\n",(0,l.jsx)(n.p,{children:"Adds a single item to the chart."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void addItem(\n  T item, {\n  bool recalculatePosition = true,\n  bool centerGraph = false,\n})\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"controller.addItem(\n  Employee(id: '10', name: 'New Employee', managerId: '2'),\n  centerGraph: true,\n);\n"})}),"\n",(0,l.jsx)(n.h4,{id:"additems",children:(0,l.jsx)(n.code,{children:"addItems"})}),"\n",(0,l.jsx)(n.p,{children:"Adds multiple items to the chart."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void addItems(\n  List<T> items, {\n  bool recalculatePosition = true,\n  bool centerGraph = false,\n})\n"})}),"\n",(0,l.jsx)(n.h4,{id:"removeitem",children:(0,l.jsx)(n.code,{children:"removeItem"})}),"\n",(0,l.jsx)(n.p,{children:"Removes an item and handles its descendants."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void removeItem(\n  String? id,\n  ActionOnNodeRemoval action, {\n  bool recalculatePosition = true,\n  bool centerGraph = false,\n})\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"ActionOnNodeRemoval Options:"})}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Action"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"unlinkDescendants"})}),(0,l.jsx)(n.td,{children:"Makes descendants root nodes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"connectDescendantsToParent"})}),(0,l.jsx)(n.td,{children:"Connects descendants to removed node's parent"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"removeDescendants"})}),(0,l.jsx)(n.td,{children:"Removes node and all descendants"})]})]})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Remove manager and promote subordinates to their manager's level\ncontroller.removeItem(\n  '5',\n  ActionOnNodeRemoval.connectDescendantsToParent,\n);\n\n// Remove entire department\ncontroller.removeItem(\n  '3',\n  ActionOnNodeRemoval.removeDescendants,\n);\n"})}),"\n",(0,l.jsx)(n.h4,{id:"updateitem",children:(0,l.jsx)(n.code,{children:"updateItem"})}),"\n",(0,l.jsx)(n.p,{children:"Updates an existing item in the chart."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void updateItem(\n  T item, {\n  bool recalculatePosition = true,\n  bool centerGraph = false,\n})\n"})}),"\n",(0,l.jsx)(n.h4,{id:"replaceall",children:(0,l.jsx)(n.code,{children:"replaceAll"})}),"\n",(0,l.jsx)(n.p,{children:"Replaces all items in the chart."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void replaceAll(\n  List<T> items, {\n  bool recalculatePosition = true,\n  bool centerGraph = false,\n})\n"})}),"\n",(0,l.jsx)(n.h4,{id:"clearitems",children:(0,l.jsx)(n.code,{children:"clearItems"})}),"\n",(0,l.jsx)(n.p,{children:"Removes all items from the chart."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void clearItems({\n  bool recalculatePosition = true,\n  bool centerGraph = false,\n})\n"})}),"\n",(0,l.jsx)(n.h3,{id:"layout-and-positioning",children:"Layout and Positioning"}),"\n",(0,l.jsx)(n.h4,{id:"calculateposition",children:(0,l.jsx)(n.code,{children:"calculatePosition"})}),"\n",(0,l.jsx)(n.p,{children:"Recalculates node positions."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void calculatePosition({bool center = true})\n"})}),"\n",(0,l.jsx)(n.h4,{id:"switchorientation",children:(0,l.jsx)(n.code,{children:"switchOrientation"})}),"\n",(0,l.jsx)(n.p,{children:"Switches between vertical and horizontal layouts."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"void switchOrientation({\n  GraphOrientation? orientation,\n  bool center = true,\n})\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Toggle orientation\ncontroller.switchOrientation();\n\n// Set specific orientation\ncontroller.switchOrientation(\n  orientation: GraphOrientation.leftToRight,\n);\n"})}),"\n",(0,l.jsx)(n.h4,{id:"centernode",children:(0,l.jsx)(n.code,{children:"centerNode"})}),"\n",(0,l.jsx)(n.p,{children:"Centers the view on a specific node."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"Future<void> centerNode(\n  String nodeId, {\n  double? scale,\n  bool animate = true,\n  Duration duration = const Duration(milliseconds: 300),\n  Curve curve = Curves.easeInOut,\n})\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Center on CEO with zoom\nawait controller.centerNode(\n  'ceo-001',\n  scale: 1.5,\n  animate: true,\n);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"node-queries",children:"Node Queries"}),"\n",(0,l.jsx)(n.h4,{id:"getsubnodes",children:(0,l.jsx)(n.code,{children:"getSubNodes"})}),"\n",(0,l.jsx)(n.p,{children:"Gets direct children of a node."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"List<Node<T>> getSubNodes(Node<T> node)\n"})}),"\n",(0,l.jsx)(n.h4,{id:"getlevel",children:(0,l.jsx)(n.code,{children:"getLevel"})}),"\n",(0,l.jsx)(n.p,{children:"Gets the hierarchical level of a node."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"int getLevel(Node<T> node)\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"final node = controller.nodes.first;\nfinal level = controller.getLevel(node); // 1 for root, 2 for children, etc.\n"})}),"\n",(0,l.jsx)(n.h4,{id:"isnodehidden",children:(0,l.jsx)(n.code,{children:"isNodeHidden"})}),"\n",(0,l.jsx)(n.p,{children:"Checks if a node is currently hidden."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"bool isNodeHidden(Node<T> node)\n"})}),"\n",(0,l.jsx)(n.h4,{id:"issubnode",children:(0,l.jsx)(n.code,{children:"isSubNode"})}),"\n",(0,l.jsx)(n.p,{children:"Checks if one node is a descendant of another."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"bool isSubNode(Node<T> child, Node<T> parent)\n"})}),"\n",(0,l.jsx)(n.h4,{id:"getoverlapping",children:(0,l.jsx)(n.code,{children:"getOverlapping"})}),"\n",(0,l.jsx)(n.p,{children:"Gets nodes that overlap with a given node."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"List<Node<T>> getOverlapping(Node<T> node)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"export-functions",children:"Export Functions"}),"\n",(0,l.jsx)(n.h4,{id:"exportasimage",children:(0,l.jsx)(n.code,{children:"exportAsImage"})}),"\n",(0,l.jsx)(n.p,{children:"Exports the chart as a PNG image."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"Future<Uint8List?> exportAsImage()\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"final imageBytes = await controller.exportAsImage();\nif (imageBytes != null) {\n  // Save to file or share\n  await saveImageToGallery(imageBytes);\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"exportaspdf",children:(0,l.jsx)(n.code,{children:"exportAsPdf"})}),"\n",(0,l.jsx)(n.p,{children:"Exports the chart as a PDF document."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"Future<pw.Document?> exportAsPdf()\n"})}),"\n",(0,l.jsx)(n.h2,{id:"-complete-example",children:"\ud83c\udfaf Complete Example"}),"\n",(0,l.jsx)(n.p,{children:"Here's a comprehensive example showing the controller in action:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"class OrgChartManager extends StatefulWidget {\n  @override\n  _OrgChartManagerState createState() => _OrgChartManagerState();\n}\n\nclass _OrgChartManagerState extends State<OrgChartManager> {\n  late OrgChartController<Employee> controller;\n  final viewerController = CustomInteractiveViewerController();\n  \n  @override\n  void initState() {\n    super.initState();\n    \n    // Initialize controller\n    controller = OrgChartController<Employee>(\n      items: loadEmployees(),\n      idProvider: (emp) => emp.id,\n      toProvider: (emp) => emp.managerId,\n      toSetter: (emp, newManagerId) => emp.copyWith(\n        managerId: newManagerId,\n      ),\n      boxSize: Size(220, 120),\n      spacing: 40,\n      runSpacing: 80,\n      orientation: GraphOrientation.topToBottom,\n      leafColumns: 3,\n    );\n    \n    // Set viewer controller for zoom/pan\n    controller.setViewerController(viewerController);\n  }\n  \n  // Add new employee\n  void hireEmployee(Employee newEmployee) {\n    setState(() {\n      controller.addItem(newEmployee, centerGraph: true);\n    });\n  }\n  \n  // Remove employee with options\n  void fireEmployee(String employeeId) {\n    showDialog(\n      context: context,\n      builder: (context) => AlertDialog(\n        title: Text('Remove Employee'),\n        content: Text('What should happen to their reports?'),\n        actions: [\n          TextButton(\n            onPressed: () {\n              controller.removeItem(\n                employeeId,\n                ActionOnNodeRemoval.connectDescendantsToParent,\n              );\n              Navigator.pop(context);\n            },\n            child: Text('Promote to Same Level'),\n          ),\n          TextButton(\n            onPressed: () {\n              controller.removeItem(\n                employeeId,\n                ActionOnNodeRemoval.removeDescendants,\n              );\n              Navigator.pop(context);\n            },\n            child: Text('Remove Entire Team'),\n          ),\n        ],\n      ),\n    );\n  }\n  \n  // Reorganize employee\n  void changeManager(Employee employee, String newManagerId) {\n    final updated = employee.copyWith(managerId: newManagerId);\n    controller.updateItem(updated);\n  }\n  \n  // Search and focus\n  void searchEmployee(String query) async {\n    final employee = controller.items.firstWhere(\n      (emp) => emp.name.toLowerCase().contains(query.toLowerCase()),\n    );\n    \n    if (employee != null) {\n      await controller.centerNode(\n        employee.id,\n        scale: 2.0,\n        animate: true,\n      );\n    }\n  }\n  \n  // Export functions\n  void exportChart() async {\n    final action = await showDialog<String>(\n      context: context,\n      builder: (context) => SimpleDialog(\n        title: Text('Export Chart'),\n        children: [\n          SimpleDialogOption(\n            onPressed: () => Navigator.pop(context, 'image'),\n            child: Text('Export as Image'),\n          ),\n          SimpleDialogOption(\n            onPressed: () => Navigator.pop(context, 'pdf'),\n            child: Text('Export as PDF'),\n          ),\n        ],\n      ),\n    );\n    \n    if (action == 'image') {\n      final bytes = await controller.exportAsImage();\n      // Handle image bytes\n    } else if (action == 'pdf') {\n      final pdf = await controller.exportAsPdf();\n      // Handle PDF document\n    }\n  }\n  \n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Organization Chart'),\n        actions: [\n          IconButton(\n            icon: Icon(Icons.rotate_90_degrees_ccw),\n            onPressed: () => controller.switchOrientation(),\n          ),\n          IconButton(\n            icon: Icon(Icons.download),\n            onPressed: exportChart,\n          ),\n        ],\n      ),\n      body: OrgChart<Employee>(\n        controller: controller,\n        viewerController: viewerController,\n        // ... rest of configuration\n      ),\n    );\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"-best-practices",children:"\ud83d\udca1 Best Practices"}),"\n",(0,l.jsxs)(n.h3,{id:"1-efficient-updates",children:["1. ",(0,l.jsx)(n.strong,{children:"Efficient Updates"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Bad: Multiple individual updates\nemployees.forEach((emp) => controller.addItem(emp));\n\n// Good: Batch update\ncontroller.addItems(employees);\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"3-performance-optimization",children:["3. ",(0,l.jsx)(n.strong,{children:"Performance Optimization"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Disable recalculation for batch operations\ncontroller.addItem(item1, recalculatePosition: false);\ncontroller.addItem(item2, recalculatePosition: false);\ncontroller.addItem(item3, recalculatePosition: false);\ncontroller.calculatePosition(); // Calculate once at the end\n"})}),"\n",(0,l.jsx)(n.h3,{id:"dynamic-data-loading",children:"Dynamic Data Loading"}),"\n",(0,l.jsx)(n.p,{children:"Load data on-demand as nodes expand:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"class LazyOrgChartController<T> extends OrgChartController<T> {\n  final Future<List<T>> Function(String parentId) loadChildren;\n  \n  Future<void> expandNode(String nodeId) async {\n    final children = await loadChildren(nodeId);\n    addItems(children);\n  }\n}\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.p,{children:["Next: Learn about the ",(0,l.jsx)(n.a,{href:"/docs/3.0.0-orgchart/03-widget",children:"OrgChart Widget \u2192"})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>i});r(6540);var t=r(4164);const l={tabItem:"tabItem_Ymn6"};var o=r(4848);function i({children:e,hidden:n,className:r}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(l.tabItem,r),hidden:n,children:e})}}}]);